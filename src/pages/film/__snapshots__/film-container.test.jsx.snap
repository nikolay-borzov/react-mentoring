// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FilmContainer page component renders correctly when connected to the store 1`] = `
<FilmContainer
  fetchFilm={[Function]}
  film={null}
  filmError={null}
  filmIsFetching={false}
  genre=""
  reFetchFilms={[Function]}
  relatedFilms={Array []}
  relatedFilmsError={null}
  relatedFilmsIsFetching={false}
  store={
    Object {
      "close": [Function],
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "runSaga": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
  storeSubscription={
    Subscription {
      "listeners": Object {
        "clear": [Function],
        "get": [Function],
        "notify": [Function],
        "subscribe": [Function],
      },
      "onStateChange": [Function],
      "parentSub": undefined,
      "store": Object {
        "close": [Function],
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "runSaga": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      },
      "unsubscribe": [Function],
    }
  }
/>
`;

exports[`FilmContainer page component renders correctly when film and relatedFilms are provided 1`] = `
<React.Fragment>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
  >
    <title>
      Film title
       ðŸŽ¥ Movie Search
    </title>
  </HelmetWrapper>
  <Header>
    <div
      className="padding-controls flex flex-align-center"
    >
      <div
        className="flex-grow"
      >
        <SiteName />
      </div>
      <Button
        primary={true}
        small={true}
        to="/search"
      >
        Search
      </Button>
    </div>
    <LoadingBlock
      hideText={true}
      isLoaded={true}
    >
      <FilmDetails
        film={
          Object {
            "genres": Array [
              "some genre",
              "another genre",
            ],
            "id": 1,
            "overview": "Film overview",
            "poster_path": "https://picsum.photos/g/300/450/?random",
            "release_date": "2018-05-04",
            "title": "Film title",
            "vote_average": 7.5,
          }
        }
      />
    </LoadingBlock>
  </Header>
  <main
    className="content"
  >
    <LoadingBlock
      hideText={false}
      isLoaded={true}
    >
      <SearchResultsPanel>
        Films by 
        Horror
         genre
      </SearchResultsPanel>
      <LoadableComponent
        films={
          Array [
            Object {
              "genres": Array [
                "some genre",
                "another genre",
              ],
              "id": 1,
              "overview": "Film overview",
              "poster_path": "https://picsum.photos/g/300/450/?random",
              "release_date": "2018-05-04",
              "title": "Film title",
              "vote_average": 7.5,
            },
          ]
        }
      />
    </LoadingBlock>
  </main>
  <Footer />
</React.Fragment>
`;

exports[`FilmContainer page component renders correctly when no film found nor related films found  1`] = `
<React.Fragment>
  <Header>
    <div
      className="padding-controls flex flex-align-center"
    >
      <div
        className="flex-grow"
      >
        <SiteName />
      </div>
      <Button
        primary={true}
        small={true}
        to="/search"
      >
        Search
      </Button>
    </div>
    <LoadingBlock
      hideText={true}
      isLoaded={true}
    >
      <FilmDetails
        film={null}
      />
    </LoadingBlock>
  </Header>
  <main
    className="content"
  >
    <LoadingBlock
      hideText={false}
      isLoaded={true}
    >
      <SearchResultsPanel>
        Films by 
        Horror
         genre
      </SearchResultsPanel>
    </LoadingBlock>
  </main>
  <Footer />
</React.Fragment>
`;

exports[`FilmContainer page component renders correctly when no related films found 1`] = `
<React.Fragment>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
  >
    <title>
      Film title
       ðŸŽ¥ Movie Search
    </title>
  </HelmetWrapper>
  <Header>
    <div
      className="padding-controls flex flex-align-center"
    >
      <div
        className="flex-grow"
      >
        <SiteName />
      </div>
      <Button
        primary={true}
        small={true}
        to="/search"
      >
        Search
      </Button>
    </div>
    <LoadingBlock
      hideText={true}
      isLoaded={true}
    >
      <FilmDetails
        film={
          Object {
            "genres": Array [
              "some genre",
              "another genre",
            ],
            "id": 1,
            "overview": "Film overview",
            "poster_path": "https://picsum.photos/g/300/450/?random",
            "release_date": "2018-05-04",
            "title": "Film title",
            "vote_average": 7.5,
          }
        }
      />
    </LoadingBlock>
  </Header>
  <main
    className="content"
  >
    <LoadingBlock
      hideText={false}
      isLoaded={true}
    >
      <SearchResultsPanel>
        Films by 
        Horror
         genre
      </SearchResultsPanel>
      <LoadableComponent
        className="font-size-header font-bold color-alt"
      >
        No related movies found
      </LoadableComponent>
    </LoadingBlock>
  </main>
  <Footer />
</React.Fragment>
`;

exports[`FilmContainer page component renders correctly when related films had failed to load 1`] = `
<React.Fragment>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
  >
    <title>
      Film title
       ðŸŽ¥ Movie Search
    </title>
  </HelmetWrapper>
  <Header>
    <div
      className="padding-controls flex flex-align-center"
    >
      <div
        className="flex-grow"
      >
        <SiteName />
      </div>
      <Button
        primary={true}
        small={true}
        to="/search"
      >
        Search
      </Button>
    </div>
    <LoadingBlock
      hideText={true}
      isLoaded={true}
    >
      <FilmDetails
        film={
          Object {
            "genres": Array [
              "some genre",
              "another genre",
            ],
            "id": 1,
            "overview": "Film overview",
            "poster_path": "https://picsum.photos/g/300/450/?random",
            "release_date": "2018-05-04",
            "title": "Film title",
            "vote_average": 7.5,
          }
        }
      />
    </LoadingBlock>
  </Header>
  <main
    className="content"
  >
    <LoadingBlock
      hideText={false}
      isLoaded={true}
    >
      <SearchResultsPanel>
        Films by 
        Horror
         genre
      </SearchResultsPanel>
      <LoadableComponent
        className="error-message"
      >
        Unable to load related movies
      </LoadableComponent>
    </LoadingBlock>
  </main>
  <Footer />
</React.Fragment>
`;

exports[`FilmContainer page component renders correctly when the film is not found 1`] = `<LoadableComponent />`;

exports[`FilmContainer page component renders correctly when the film is unavailable 1`] = `
<React.Fragment>
  <Header>
    <div
      className="padding-controls flex flex-align-center"
    >
      <div
        className="flex-grow"
      >
        <SiteName />
      </div>
      <Button
        primary={true}
        small={true}
        to="/search"
      >
        Search
      </Button>
    </div>
    <LoadingBlock
      hideText={true}
      isLoaded={true}
    >
      <FilmDetails
        film={null}
      />
    </LoadingBlock>
  </Header>
  <main
    className="content"
  >
    <LoadingBlock
      hideText={false}
      isLoaded={true}
    >
      <SearchResultsPanel>
        Films by 
        Horror
         genre
      </SearchResultsPanel>
      <LoadableComponent
        films={
          Array [
            Object {
              "genres": Array [
                "some genre",
                "another genre",
              ],
              "id": 1,
              "overview": "Film overview",
              "poster_path": "https://picsum.photos/g/300/450/?random",
              "release_date": "2018-05-04",
              "title": "Film title",
              "vote_average": 7.5,
            },
          ]
        }
      />
    </LoadingBlock>
  </main>
  <Footer />
</React.Fragment>
`;
